Directories:

cfg:
    CNFGGLOB.h: 
        	Configuration options used by both platform specific and platform independent code.
            Global_config.h ?
            #include <stdint.h>
    EMCONFIG.h:
        	Configuration options used by platform independent code.
            This file is automatically generated by the build system, which tries to know what options are valid in what combinations. Avoid changing this file manually unless you know what you're doing.

            emulator_config.h?
    MACII.h:
        	Configuration options used by platform independent code.

	        This file is automatically generated by the build system, which tries to know what options are valid in what combinations. Avoid changing this file manually unless you know what you're doing.

            mac_ii.h (probably should be removed.)
    MACPLUS.h:
            Configuration options used by platform independent code.

	        This file is automatically generated by the build system, which tries to know what options are valid in what combinations. Avoid changing this file manually unless you know what you're doing.

            mac_plus.h (probably should be removed.)
    STRCONST.h:
        Is just straight #include "LANG/STRCNENG.h" ?
        Could probably be removed.
gfx:
    Seems to be various pictures for use in the emulator.
lib:
    The incbin and tomlc99 libraries. Maybe replace with other libraries at some point?
    incbin is for including binaries.
    tomlc99, naurally, is for parsing toml.
src:
    HW:
        ADB:
        DISK:
        KBRD:
        M68K:
        MOUSE:
        POWERMAN:
        RAM:
        ROM:
        RTC:
        SCC:
        SCREEN:
        SCSI:
        SOUND:
        VIA:
        VIDCARD:
    LANG:
        Seems to be a bunch of string utilities and translations. Replace with actual c++ strings or SDL?
        Tempted to remove the translations, as if I do a lot of rewriting, that'll probably include the text it's translating.

        INTLCHAR.cpp:
            InterNaTionAL CHARacters. TODO: Move this to a PCF, BDF, or FON bitmap font format.
            master copy of private font data.
            #include "UI/COMOSGLU.h"
            #include "UI/MYOSGLUE.h"
            #include "UI/CONTROLM.h"
            #include "LANG/INTLCHAR.h"
            #include "STRCONST.h"

        INTLCHAR.h:
            See above.
            #include "UI/COMOSGLU.h"
            #include "UI/MYOSGLUE.h"

        STRCNCAT.h:
            STRing CoNstants for CATalan.
        STRCNCZE.h:
            STRing CoNstants for CZEch.
        STRCNDUT.h:
            STRing CoNstants for DUTch.
        STRCNENG.h:
            STRing CoNstants for ENGlish.
        STRCNFRE.h:
            STRing CoNstants for FREnch.
        STRCNGER.h:
            STRing CoNstants for GERman.
        STRCNITA.h:
            STRing CoNstants for ITAlian.
        STRCNPOL.h:
            STRing CoNstants for POLish.
        STRCNPTB.h:
            STRing CoNstants for PorTuguese-Brazilian.
        STRCNSPA.h:
            STRing CoNstants for SPAnish.
        STRCNSRL.h:
            STRing CoNstants for SeRbian Latin

    PATCHES:
        HPMCHACK.h:
            HaPpy MaCintosh Hack. 	Patch the ROM for alternatives to the Happy Macintosh icon displayed on boot when a disk is inserted.
            Bitmaps from http://www.bigmessowires.com/mac-rom-inator/ (Still up!)
            #include <string.h>
            #include "SYSDEPNS.h"
            #include "UI/COMOSGLU.h"
            Er, includes a bunch of xbm files I don't see here. Probably not used? Might just remove it.
            Followup: No, they are in rsrc/HAPPYMAC

        ROMEMDEV.cpp:
            	Read Only Memory EMulated DEVice. Checks the header of the loaded ROM image, and then patches the ROM image.
                ROM.cpp is probably fine.

                #include "EMCONFIG.h"
                #include "SYSDEPNS.h"
                #include "GLOBGLUE.h"
                #include "UI/MYOSGLUE.h"
                #include "UTIL/ENDIANAC.h"
                #include "PATCHES/ROMEMDEV.h"
                #include "PATCHES/SCRNHACK.h"
                #include "PATCHES/SONYDRV.h"
                #ifdef CurAltHappyMac
                #include "HPMCHACK.h"
                #endif

        ROMEMDEV.h:
            Header for above.

        SCRHACK.cpp:
            SCReeN Hack. Patch ROM to support other screen sizes.
            screen_hack.cpp.
            #include "EMCONFIG.h"
            #include "SYSDEPNS.h"
            #include "UI/MYOSGLUE.h"
            #include "UTIL/ENDIANAC.h"
            #include "EMCONFIG.h"
            #include "GLOBGLUE.h"
            #include "incbin/incbin.h"
            #include "PATCHES/ROMEMDEV.h"
            #include "HW/SCREEN/SCRNEMDV.h"

        SCRHACK.h:
            Header for above.

        SONYDRV.cpp:
            	Replacement for .Sony driver 68k machine code, compiled from mydriver.a. Included in the resource file for WIN32 builds.
                #include <stdint.h>
                #include <string.h>
                #include "incbin/incbin.h"
                #ifdef _MSC_VER
                #include <Windows.h>
                #endif

                #include "EMCONFIG.h"
                #include "GLOBGLUE.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "PATCHES/SONYDRV.h"
                #include "PATCHES/ROMEMDEV.h"
                //#include "PATCHES/SCRNHACK.h"

                // temporary screenhack stuff
                #include "HW/SCREEN/SCRNEMDV.h"

        SONYDRV.h:
            Header for above.
    UI:
        SDL2:
            CLIPBRD.cpp:
                clipboard.cpp.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "STRCONST.h"

            DBGLOG.cpp:
                sending debugging info to file.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include "SYSDEPNS.h"
                #include "UI/MYOSGLUE.h"

            DRIVES.cpp:
                Handles floppy drives, presumably. Or doesn't. Need to check the original versions source on a lot of the sdl2 stuff. Think it's an in progress rewrite.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "EMCONFIG.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "STRCONST.h"
                #include "HW/ROM/ROMEMDEV.h"
                #include "UI/CONTROLM.h"
                #include "UI/SDL2/OSGLUSD2.h"

            INTL.cpp:
                control mode and internationalization.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "STRCONST.h"
                #include "LANG/INTLCHAR.h"

            KEYBOARD.cpp:
                Handles keyboard input. Doesn't handle the ctrl stuff, IIRC.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "EMCONFIG.h"
                #include "SYSDEPNS.h"
                #include "UI/COMOSGLU.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "STRCONST.h"

            MOUSE.cpp:
                Handles mouse. All of this could benefit from a shared header, maybe?
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "STRCONST.h"
                #include "OSGLUSD2.h"

            OSGLUSD2.cpp:
            	Operating System GLUe for SDl 2.0 library.

	            "All operating system dependent code for the SDL Library should go here." Likely story.

                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "STRCONST.h"
                #include "OSGLUSD2.h"
                #include "LANG/INTLCHAR.h"
                #include "HW/SCREEN/SCRNEMDV.h"
                #include "HW/ROM/ROMEMDEV.h"
                #include "CFGMAN.h"

            OSGLUSD2.h:
                defines and macros and such.
                #include <stdbool.h>
                #include <stdint.h>
                #include <SDL.h>
                #include "UI/MYOSGLUE.h"
                
            ROM.cpp:
                Loads the ROM.
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include "SYSDEPNS.h" 
                #include "ERRCODES.h"
                #include "STRCONST.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "UI/CONTROLM.h"
                #include "UI/SDL2/OSGLUSD2.h"
                #include "HW/ROM/ROMEMDEV.h"

            SOUND.cpp:
                Sound!
                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "STRCONST.h" 
                #include "OSGLUSD2.h"

            TIMEDATE.cpp:
                Handle time, date, & location.

                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <stdint.h>
                #include <SDL.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "STRCONST.h"

            VIDEO.cpp:
                Handles video.

                #include <stdlib.h>
                #include <string.h>
                #include <stdio.h>
                #include <assert.h>
                #include <SDL.h>
                #include <SDL_pixels.h>
                #include "CNFGRAPI.h"
                #include "SYSDEPNS.h"
                #include "UTIL/ENDIANAC.h"
                #include "UI/MYOSGLUE.h"
                #include "UI/COMOSGLU.h"
                #include "STRCONST.h"
                #include "OSGLUSD2.h"
                #include "HW/SCREEN/SCRNEMDV.h"

        COMOSGLU.cpp:
            COMmon code for Operating System GLUe

            #include <stdlib.h>
            #include "SYSDEPNS.h"
            #include "GLOBGLUE.h"
            #include "MYOSGLUE.h"
            #include "CNFGRAPI.h"
            #include "COMOSGLU.h"
            #include "HW/SCREEN/SCRNEMDV.h"

        COMOSGLU.h:
            Header.

            #include "SYSDEPNS.h"
            #include "CNFGRAPI.h"
            #include "GLOBGLUE.h"
            #include "MYOSGLUE.h"

        CONTROLM.cpp:
            CONTROL Mode.

            #include "SYSDEPNS.h"
            #include "CNFGGLOB.h"
            #include "CNFGRAPI.h"
            #include "STRCONST.h"
            #include "ERRCODES.h"

            #include "LANG/INTLCHAR.h"
            #include "UI/COMOSGLU.h"
            #include "UI/MYOSGLUE.h"
            #include "UTIL/ENDIANAC.h"

            #include "UI/CONTROLM.h"
            #include <SDL.h>
            #include "UI/SDL2/OSGLUSD2.h"

        CONTROLM.h:
            Header.

            #include "SYSDEPNS.h"
            #include "ERRCODES.h"

        MYOSGLUE.h:
        	MY Operating System GLUE. header file for operating system dependent code. the same header is used for all platforms.
            #include "UTIL/DATE2SEC.h"
            #include "HW/KBRD/KEYCODES.h"
            #include "ERRCODES.h"

    UTIL:
        BPFILTER.h:
            Berkeley Packet Filter for localtalk emulation.

        DATE2SEC.cpp:
        DATE2SEC.h:
            DATE 2(to) SEConds. Convert year/month/day/hour/minute/second to number of seconds since the beginning of 1904, the format for storing dates on the Macintosh.

            The function jdate is from the program Webalizer by Bradford L. Barrett.

            	The function jdate was found at the end of the file webalizer.c in the program webalizer at "www.mrunix.net/webalizer/".

        ENDIANAC.h:
            ENDIAN ACcess.

            	Deals with endian issues in memory access.

	            This code is adapted from code in the Un*x Amiga Emulator by Bernd Schmidt, as found in vMac by Philip Cummins

        PBUFSTDC.h:
            Parameter BUFfers implemented with STanDard C library

    CFGMAN.cpp:
    CFGMAN.h:
        Configuration Management.

        #include "tomlc99/toml.h"
        #include <stdio.h>
        #include <stdlib.h>
        #include <stdint.h>
        #include <stdbool.h>
        #include <string.h>
        #include "HW/SCREEN/SCRNEMDV.h"

    ERRCODES.h:
        	error codes returned by Mini vMac extensions (passed back to the emulated 68k code).
    GLOBGLUE.cpp:
        GLOBal GLUE (or GLOB of GLUE) Holds the program together. 
        #include "SYSDEPNS.h"

        #include "UI/MYOSGLUE.h"
        #include "UTIL/ENDIANAC.h"
        #include "EMCONFIG.h"

        #include "GLOBGLUE.h"
        #include "HW/RAM/RAMADDR.h"

    GLOBGLUE.h:
        	GLOBal GLUE (or GLOB of GLUE) Holds the program together. 
            #include "CNFGRAPI.h"
            #include "EMCONFIG.h"
            #include "SYSDEPNS.h"

    PROGMAIN.cpp:
        PROGram MAIN.

        #include <string.h>
        #include <assert.h>
        #include "SYSDEPNS.h"

        #include "UI/MYOSGLUE.h"
        #include "EMCONFIG.h"
        #include "GLOBGLUE.h"
        #include "HW/M68K/M68KITAB.h"
        #include "HW/M68K/MINEM68K.h"
        #include "HW/VIA/VIAEMDEV.h"
        #include "HW/VIA/VIA2EMDV.h"
        #include "HW/DISK/IWMEMDEV.h"
        #include "HW/SCC/SCCEMDEV.h"
        #include "HW/RTC/RTCEMDEV.h"
        #include "PATCHES/ROMEMDEV.h"
        #include "HW/SCSI/SCSIEMDV.h"
        #include "HW/DISK/SONYEMDV.h"
        #include "HW/SCREEN/SCRNEMDV.h"
        #include "HW/VIDCARD/VIDEMDEV.h"
        #include "HW/KBRD/KBRDEMDV.h"
        #include "HW/POWERMAN/PMUEMDEV.h"
        #include "HW/ADB/ADBEMDEV.h"
        #include "HW/SOUND/ASCEMDEV.h"
        #include "HW/SOUND/SNDEMDEV.h"
        #include "HW/MOUSE/MOUSEMDV.h"

    PROGMAIN.h:
        Header. Barely anything in it.

    SYSDEPNS.h:
        SYStem DEPeNdencies.

        #include <stdint.h>
        #include <stdbool.h>
        #include "CNFGGLOB.h"

Where program headers are used:
cfg:
    CNFGGLOB.h: 
        Used in:
        SYSDEPNS.h:
        CONTROLM.cpp:

    EMCONFIG.h:
        Used in:
        GLOBGLUE.cpp
        GLOBGLUE.h
        PROGMAIN.cpp
        ADBEMDEV.cpp
        IWMEMDEV.cpp
        SONYEMDV.cpp
        KBRDEMDV.cpp
        DISAM68k.cpp
        M68KITAB.cpp
        MINEM68k.cpp
        MOUSEMDV.cpp
        PMUEMDEV.cpp
        RTCEMDEV.cpp
        SCCEMDEV.cpp
        SCRNEMDV.cpp
        SCSIEMDV.cpp
        ASCEMDEV.cpp
        SNDEMDEV.cpp
        VIA2EMDV.cpp
        VIAEMDEV.cpp
        VIDEMDEV.cpp
        ROMEMDEV.cpp
        SCRNHACK.cpp (twice?)
        SONYDRV.cpp
        DRIVES.cpp
        KEYBOARD.cpp

        Lord.
    MACII.h:
        EMCONFIG.h (commented out)

    MACPLUS.h:
        EMCONFIG.h
    STRCONST.h:
        LANG/INTLCHAR.cpp
        UI/CONTROLM.cpp
        UI/SDL2/CLIPBRD.cpp
        UI/SDL2/DRIVES.cpp 
        UI/SDL2/INTL.cpp
        UI/SDL2/KEYBOARD.cpp
        UI/SDL2/MOUSE.cpp
        UI/SDL2/OSGLUSD2.cpp
        UI/SDL2/ROM.cpp
        UI/SDL2/SOUND.cpp
        UI/SDL2/TIMEDATE.cpp
        UI/SDL2/VIDEO.cpp

src:
    LANG:
        INTLCHAR.h:
            UI/CONTROLM.cpp
            UI/SDL2/INTL.cpp
            UI/SDL2/OSGLUSD2.cpp
        STRCNCAT.h:
        STRCNCZE.h:
        STRCNDUT.h:
        STRCNENG.h:
            cfg/STRCONST.h (presumably whichever language is enabled gets included there)
        STRCNFRE.h:
        STRCNGER.h:
        STRCNITA.h:
        STRCNPOL.h:
        STRCNPTB.h:
        STRCNSPA.h:
        STRCNSRL.h:
    
    PATCHES:
        HPMCHACK.h:
            PATCHES/ROMEMDEV.cpp
        ROMEMDEV.h:
            PROGMAIN.cpp
            HW/ROM/ROMEMDEV.cpp
            PATCHES/ROMEMDEV.cpp
            PATCHES/ROMEMDEV.h
            PATCHES/SCRNHACK.cpp
            PATCHES/SONYDRV.cpp
            UI/SDL2/DRIVES.cpp
            UI/SDL2/OSGLUSD2.cpp
            UI/SDL2/ROM.cpp

        SCRNHACK.h:
            PATCHES/ROMEMDEV.cpp
            PATCHES/SCRNHACK.cpp
            //PATCHES/SONYDRV.cpp
        SONYDRV.h:
            PATCHES/ROMEMDEV.cpp
            PATCHES/SONYDRV.cpp
    UI:
        SDL2:
            OSGLUSD2.h:
                UI/CONTROLM.cpp
                UI/SDL2/DRIVES.cpp
                UI/SDL2/MOUSE.cpp
                UI/SDL2/OSGLUSD2.cpp
                UI/SDL2/ROM.cpp
                UI/SDL2/SOUND.cpp
                VIDEO.cpp
        COMOSGLU.h:
            LANG/INTLCHAR.cpp
            LANG/INTLCHAR.h
            PATCHES/HPMHACK.h
            UI/COMOSGLU.cpp
            UI/CONTROLM.cpp
            UI/SDL2/CLIPBRD.cpp
            UI/SDL2/DRIVES.cpp
            UI/SDL2/KEYBOARD.cpp
            UI/SDL2/MOUSE.cpp
            UI/SDL2/OSGLUSD2.cpp
            UI/SDL2/ROM.cpp
            UI/SDL2/SOUND.cpp
            UI/SDL2/VIDEO.cpp
        CONTROLM.h:
            LANG/INTLCHAR.cpp
            UI/CONTROLM.cpp
            UI/SDL2/DRIVES.cpp
            UI/SDL2/OSGLUSD2.cpp
            UI/SDL2/ROM.cpp
        MYOSGLUE.h:
            GLOBGLUE.cpp
            PROGMAIN.cpp
            HW/ADB/ADBEMDEV.cpp
            HW/DISK/IWMEMDEV.cpp
            HW/DISK/SONYEMDV.cpp
            HW/KBRD/KBRDEVDV.cpp
            HW/M68K/DISAM68K.cpp
            HW/M68K/M68KITAB.cpp
            HW/M68K/MINEM68K.cpp
            HW/MOUSE/MOUSEMDV.cpp
            HW/POWERMAN/PMUEMDEV.cpp
            HW/RTC/RTCEMDEV.cpp
            HW/SCC/SCCEMDEV.cpp
            HW/SCREEN/SCRNEMDV.cpp
            HW/SCSI/SCSIEMDV.cpp
            HW/SOUND/ASCEMDEV.cpp
            HW/SOUND/SNDEMDEV.cpp
            HW/VIA/VIA2EMDV.cpp
            HW/VIA/VIAEMDEV.cpp
            HW/VIDCARD/VIDEMDEV.cpp
            LANG/INTLCHAR.cpp
            LANG/INTLCHAR.h (thank god, a header.)
            PATCHES/ROMENDEV.cpp
            PATCHES/SCRNHACK.cpp
            PATCHES/SONYDRV.cpp
            UI/COMOSGLU.cpp
            UI/COMOSGLU.h (another header)
            UI/CONTROLM.cpp
            UI/SDL2/CLIPBRD.cpp
            UI/SDL2/DBGLOG.cpp
            UI/SDL2/DRIVES.cpp 
            UI/SDL2/INTL.cpp
            UI/SDL2/KEYBOARD.cpp
            UI/SDL2/MOUSE.cpp
            UI/SDL2/OSGLUSD2.cpp
            UI/SDL2/OSGLUSD2.h
            UI/SDL2/ROM.cpp
            UI/SDL2/SOUND.cpp
            UI/SDL2/TIMEDATE.cpp
            UI/SDL2/VIDEO.cpp
    UTIL:
        BPFILTER.h:
            Not currently included anywhere.
        DATE2SEC.h:
            DATE2SEC.cpp
        ENDIANAC.h:
            GLOBGLUE.cpp
            HW/DISK/SONYEMDV.cpp
            HW/M68K/DISAM68K.cpp
            HW/M68K/MINEM68K.cpp
            HW/MOUSE/MOUSEMDV.cpp
            HW/ROM/ROMEMDEV.cpp
            HW/RTC/RTCEMDEV.cpp
            HW/SCREEN/SCRNEMDV.cpp
            HW/SCSI/SCSIEMDV.cpp
            HW/SOUND/ASCEMDEV.cpp
            HW/VIDCARD/VIDEMDEV.cpp
            PATCHES/ROMENDEV.cpp
            PATCHES/SCRNHACK.cpp
            PATCHES/SONYDRV.cpp
            UI/CONTROLM.cpp
            UI/SDL2/CLIPBRD.cpp
            UI/SDL2/DRIVES.cpp 
            UI/SDL2/INTL.cpp
            UI/SDL2/KEYBOARD.cpp
            UI/SDL2/MOUSE.cpp
            UI/SDL2/OSGLUSD2.cpp
            UI/SDL2/SOUND.cpp
            UI/SDL2/TIMEDATE.cpp
            UI/SDL2/VIDEO.cpp
        PBUFSTDC.h:
            UI/SDL2/OSGLUSD2.cpp
    CFGMAN.h:
        HW/SCREEN/SCRNEMDV.cpp
    ERRCODES.h:
        UI/CONTROLM.cpp
        UI/CONTROLM.h
        UI/MYOSGLUE.h
        UI/ROM.cpp
    GLOBGLUE.h:
        PROGMAIN.cpp
        HW/ADB/ADBEMDEV.cpp
        HW/DISK/IWMEMDEV.cpp
        HW/DISK/SONYEMDV.cpp
        HW/KBRD/KBRDEVDV.cpp
        HW/M68K/DISAM68K.cpp
        HW/M68K/FPCPEMDV.cpp
        HW/M68K/M68KITAB.cpp
        HW/M68K/MINEM68K.cpp
        HW/MOUSE/MOUSEMDV.cpp
        HW/POWERMAN/PMUEMDEV.cpp
        HW/ROM/ROMEMDEV.cpp
        HW/RTC/RTCEMDEV.cpp
        HW/SCC/SCCEMDEV.cpp
        HW/SCREEN/SCRNEMDV.cpp
        HW/SCSI/SCSIEMDV.cpp
        HW/SOUND/ASCEMDEV.cpp
        HW/SOUND/SNDEMDEV.cpp
        HW/VIA/VIA2EMDV.cpp
        HW/VIA/VIAEMDEV.cpp
        HW/VIDCARD/VIDEMDEV.cpp
        PATCHES/ROMENDEV.cpp
        PATCHES/SCRNHACK.cpp
        PATCHES/SONYDRV.cpp
        UI/COMOSGLU.cpp
        UI/COMOSGLU.h
    PROGMAIN.h:
        PROGMAIN.cpp
        UI/SDL2/OSGLUSD2.cpp
    SYSDEPNS.h:
        GLOBGLUE.cpp
        GLOBGLUE.h
        PROGMAIN.cpp
        HW/ADB/ADBEMDEV.cpp
        HW/DISK/IWMEMDEV.cpp
        HW/DISK/SONYEMDV.cpp
        HW/KBRD/KBRDEVDV.cpp
        HW/M68K/DISAM68K.cpp
        HW/M68K/FPCPEMDV.cpp
        HW/M68K/FPMATHEM.h 
        HW/M68K/M68KITAB.cpp
        HW/M68K/MINEM68K.cpp
        HW/MOUSE/MOUSEMDV.cpp
        HW/POWERMAN/PMUEMDEV.cpp
        HW/RTC/RTCEMDEV.cpp
        HW/SCC/SCCEMDEV.cpp
        HW/SCREEN/SCRNEMDV.cpp
        HW/SCSI/SCSIEMDV.cpp
        HW/SOUND/ASCEMDEV.cpp
        HW/SOUND/SNDEMDEV.cpp
        HW/VIA/VIA2EMDV.cpp
        HW/VIA/VIAEMDEV.cpp
        HW/VIDCARD/VIDEMDEV.cpp
        PATCHES/ROMENDEV.cpp
        PATCHES/SCRNHACK.cpp
        PATCHES/SONYDRV.cpp
        UI/COMOSGLU.cpp
        UI/COMOSGLU.h
        UI/CONTROLM.cpp
        UI/CONTROLM.h
        UI/SDL2/CLIPBRD.cpp
        UI/SDL2/DBGLOG.cpp
        UI/SDL2/DRIVES.cpp 
        UI/SDL2/INTL.cpp
        UI/SDL2/KEYBOARD.cpp
        UI/SDL2/MOUSE.cpp
        UI/SDL2/OSGLUSD2.cpp
        UI/SDL2/ROM.cpp
        UI/SDL2/SOUND.cpp
        UI/SDL2/TIMEDATE.cpp
        UI/SDL2/VIDEO.cpp
        UTIL/DATE2SEC.cpp
        UTIL/DATE2SEC.h
        
